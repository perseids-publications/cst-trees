/*
 * Arethusa - a backend-independent client-side annotation framework
 * http://github.com/alpheios-project/arethusa
 *
 * Version 0.2.5
 * built from branch master
 * at 449ee3e5eb26fba7ede57b24be71aac565de0667
 * on 2017-06-07T14:58:53.301Z
 *
 * Published under the MIT license
 */

"use strict";angular.module("arethusa.morph",[]),angular.module("arethusa.morph").directive("accordionHighlighter",function(){return{restrict:"A",link:function(a,b,c){var d="accordion-selected";a.$watch("form.selected",function(a,c){a?b.parent().addClass(d):b.parent().removeClass(d)})}}}),angular.module("arethusa.morph").directive("formSelector",function(){return{restrict:"A",link:function(a,b,c){function d(b){b.stopPropagation(),a.$apply(function(){a.form.selected?a.plugin.unsetState(e):a.plugin.setState(e,a.form)}),b.target.blur()}var e=a.id;a.$watch("form.selected",function(b,c){a.iconClass=b?"minus":"plus",a.title=b?"deselect":"select"}),b.bind("click",d)},template:'      <input        type="checkbox"        class="postag-selector"        ng-checked="form.selected">      </input>    '}}),angular.module("arethusa.morph").directive("mirrorMorphForm",["morph",function(a){return{restrict:"A",scope:{form:"=mirrorMorphForm",tokenId:"="},link:function(b,c,d){function e(){var a=angular.copy(b.form);return delete a.origin,a}var f=a.analyses[b.tokenId];"mfc"+b.tokenId;c.bind("click",function(){b.$apply(function(){f.customForm=e()})})}}}]),angular.module("arethusa.morph").directive("morphForm",function(){return{restrict:"E",scope:!0,templateUrl:"js/templates/morph_form.html"}}),angular.module("arethusa.morph").directive("morphFormAttributes",["morph","notifier","state",function(a,b,c){return{restrict:"A",scope:{form:"=morphFormAttributes",tokenId:"="},link:function(d,e,f){var g=d.tokenId;d.m=a,d.attrs=a.sortAttributes(d.form.attributes),d.inv=d.form.lexInv,d.askForRemoval=function(){d.confirmationRequested=!0},d.skipRemoval=function(){d.confirmationRequested=!1},d.removeForm=function(){d.form.selected&&a.unsetState(g),a.removeForm(g,d.form),b.success("Removed form of "+c.asString(g))}},templateUrl:"js/arethusa.morph/templates/morph_form_attributes.html"}}]),angular.module("arethusa.morph").directive("morphFormCreate",["morph","state","notifier","translator","morphLocalStorage",function(a,b,c,d,e){return{restrict:"E",scope:{token:"=morphToken",id:"=morphId"},link:function(e,f,g,h){function i(a,b){if(!a)return!0;var c=!0;for(var d in a){var e;if(e=j(a,d),e=b?e:!e){c=!1;break}}return c}function j(a,b){var c=a[b];return"*"===c?angular.isDefined(e.form.attributes[b]):v(arethusaUtil.toAry(c),e.form.attributes[b])}function k(a){return i(a,!1)}function l(a){return i(a,!0)}function m(a){var b;if(a)for(var c=a.length-1;c>=0;c--){var d=a[c],e=k(d["if"]),f=l(d.unless);if(e&&f){b=!0;break}}else b=!0;return b}function n(){return arethusaUtil.inject([],a.postagSchema,function(b,c){m(a.rulesOf(c))&&b.push(c)})}function o(){e.visibleAttributes=n()}function p(){w.find("input").addClass("warn"),d("morph.lemmaHint",function(a){e.lemmaHint=a})}function q(){w.find("input").removeClass("warn"),e.lemmaHint=""}function r(){var b=arethusaUtil.inject({},e.visibleAttributes,function(a,b){a[b]=e.form.attributes[b]});e.form.attributes=b,e.form.postag=a.attributesToPostag(e.form.attributes)}function s(){e.form.origin="you"}function t(){var d=angular.copy(e.form);e.forms.push(d),a.setState(e.id,d),a.addToLocalStorage(e.token.string,d),u(d);var f=b.asString(e.id),g=e.translations.createSuccess({form:f});c.success(g)}function u(c){var d=e.token.string;angular.forEach(b.tokens,function(b,f){if(f!==e.id&&b.string===d){var g=a.analyses[f],h=angular.copy(c);h.selected=!1,g.forms.push(h),a.hasSelection(g)||a.setState(f,h)}})}var v=arethusaUtil.isIncluded,w=f.find("#lemma-form");e.translations=d({"morph.createSuccess":"createSuccess","morph.createError":"createError"}),e.m=a,e.form=e.token.customForm,e.forms=e.token.forms,e.declareOk=function(){q()},e.reset=function(){e.resetAlert(),p(),a.resetCustomForm(e.token,e.id)},e.resetAlert=function(){e.alert=!1},e.save=function(a){a?(r(),s(),t(),e.reset()):e.alert=!0},e.$watch("form.attributes",function(a,b){o()},!0),e.$watch("token.customForm",function(a,b){e.form=a}),f.on("show-mfc"+e.id,function(){var a=angular.element(document.getElementById("sidepanel"));a.scrollTo(f.children(),0,500)}),p()},templateUrl:"js/templates/morph_form_create.html"}}]),angular.module("arethusa.morph").directive("morphFormEdit",function(){return{restrict:"E",templateUrl:"js/templates/morph_form_edit.html"}}),angular.module("arethusa.morph").factory("BspMorphRetriever",["configurator",function(a){function b(a,b){b.forEach(function(b){delete a[b]})}function c(a){for(var b in a)if(a[b].$){var c=a[b].$;a[b]=c}}function d(a,b){if(b)for(var c in b){var d=b[c],e=a[c];delete a[c],a[d]=e}}function e(a,b){if(b)for(var c in b){var d=a[c],e=b[c],f=e[d];f&&(a[c]=f)}}function f(a){return a?{uri:a,urn:a.slice(a.indexOf("urn:"))}:void 0}return function(g){var h=this,i=a.provideResource(g.resource);this.getWord=function(a){return i.get({word:a})},this.abort=i.abort,this.flattenAttributes=c,this.getData=function(a,g){return h.getWord(a).then(function(a){try{var i=arethusaUtil.toAry(a.data.RDF.Annotation.Body),j=arethusaUtil.inject([],i,function(a,g){var i=g.rest.entry,j=i.dict.hdwd.$;arethusaUtil.toAry(i.infl).forEach(function(g){b(g,["term","stemtype"]),c(g),d(g,h.mapping.attributes),e(g,h.mapping.values),a.push({lexInvLocation:f(i.uri),lemma:j,attributes:g,origin:"bsp/morpheus"})})});g(j)}catch(k){return[]}}),[]}}}]),angular.module("arethusa.morph").service("fakeMorphRetriever",function(){this.getStubData=function(a){var b=$.ajax({url:"./static/analyses.json",async:!1});b.done(a)};var a;this.getStubData(function(b){a=b}),this.getData=function(b,c){var d=a[b]||[];c(d)}}),angular.module("arethusa.morph").service("LexicalInventoryRetriever",["configurator",function(a){function b(a){var b="        select ?object from <http://data.perseus.org/ds/lexical>        where {<"+a+">          <http://purl.org/dc/terms/isReferencedBy> ?object        }      ";return b}function c(a){return a.match("alpheios")?"Alpheios":a.match("logeion")?"Logeion":a.match("perseus")?"Perseus":void 0}function d(a){var b=a.results.bindings;return arethusaUtil.inject({},b,function(a,b){var d=b.object.value;a[c(d)]=d})}return function(c){var e=a.provideResource(c.resource);this.getData=function(a,c){c.lexInv={uri:c.lexInvLocation.uri,urn:c.lexInvLocation.urn};var f=b(a);e.get({query:f}).then(function(a){c.lexInv.dictionaries=d(a.data)})}}}]),angular.module("arethusa.morph").service("morph",["state","configurator","plugins","globalSettings","keyCapture","morphLocalStorage","commons","saver","navigator","exitHandler",function(a,b,c,d,e,f,g,h,i,j){function k(a){this.string=a,this.forms=[],this.analyzed=!1}function l(a,b){return a.lemma===b.lemma&&a.postag===b.postag}function m(b,c){function d(b,c){function d(a){return a&&!a.match(/^-*$/)}function e(a,b){z.gloss&&(z.analyses[a].gloss=b.gloss)}var f=a.tokens[c].morphology;if(f){var g=f.attributes;if(d(f.postag))z.postagToAttributes(f);else{if(!g)return;f.postag=z.attributesToPostag(g)}f.origin||(f.origin="state"),f.selected=!0,e(c,f),b.forms.push(f),q()&&a.addStyle(c,z.styleOf(f))}}d(b,c),z.canRetrieveFrom("external")?z.getExternalAnalyses(b,c):p(b.forms,c),b.analyzed=!0,z.resetCustomForm(b,c)}function n(a){angular.forEach(z.analyses[a].forms,function(a,b){a.selected=!1})}function o(b){return a.getToken(b).morphology}function p(b,c){0===b.length&&q()&&a.unsetStyle(c)}function q(){return d.isColorizer(z.name)}function r(a,b){var c=a.attributes||{};angular.forEach(c,function(a,c){y[a]||(y[a]=[]),y[a].push(b)})}function s(b){var c=a.getToken(b).morphology||{},d=c.attributes||{};angular.forEach(d,function(a,c){var d=y[a];if(d)for(var e=d.indexOf(b);-1!==e;)d.splice(e,1),e=d.indexOf(b)})}function t(){D=!0}function u(){function b(a){a.morphology&&a.morphology.postag&&f.addPreference(a.string,a.morphology)}D&&z.storePreferences&&(angular.forEach(a.tokens,b),D=!1)}function v(){function a(){function a(a,b){a.values["---"]=A}angular.forEach(z.attributes,a)}function c(a){function b(a,b){function c(a){for(var b=z.mappings[a];angular.isString(b);)b=z.mappings[a];return b||{}}a.mapping=c(b)}angular.forEach(a,b)}var d=["postagSchema","attributes","mappings","noRetrieval","gloss","localStorage","storePreferences"];b.getConfAndDelegate(z,d),b.getStickyConf(z,["preselect","matchAll"]),z.analyses={},w=b.getRetrievers(z.conf.retrievers),c(w),z.localStorage&&(w.localStorage=f.retriever,f.comparator=l),a(),z.conf.lexicalInventory&&(x=b.getRetriever(z.conf.lexicalInventory.retriever)),B=void 0,y={}}var w,x,y,z=this;this.name="morph",d.addColorizer(z.name),this.canSearch=!0,this.canEdit=function(){return"editor"===z.mode},this.defaultConf={mappings:{},gloss:!1,matchAll:!0,preselect:!1,localStorage:!0,storePreferences:!0};var A={"long":"---","short":"---",postag:"_"};this.emptyForm=function(a){function b(){return arethusaUtil.inject({},z.postagSchema,function(a,b){a[b]=void 0})}return{lemma:a,postag:z.emptyPostag,attributes:b()}},this.updatePostag=function(a,b,c){var d=z.postagSchema.indexOf(b),e=z.postagValue(b,c);a.postag=arethusaUtil.replaceAt(a.postag,d,e)},this.postagToAttributes=function(a){var b={};angular.forEach(a.postag,function(a,c){var d=z.postagSchema[c],e=z.attributeValues(d),f=arethusaUtil.findObj(e,function(b){return b.postag===a});f&&(b[d]=f["short"])}),a.attributes=b},this.attributesToPostag=function(a){var b=arethusaUtil.map(z.postagSchema,function(b){var c=z.attributeValues(b),d=a[b],e=arethusaUtil.findObj(c,function(a){return a["short"]===d||a["long"]===d});return e?e.postag:"-"});return b.join("")},this.canRetrieveFrom=function(a){var b=!1;if(z.noRetrieval)if("document"===a)b="all"!==z.noRetrieval;else if("external"===a)b="online"!==z.noRetrieval&&"all"!==z.noRetrieval;else{var c=new RegExp("\\b"+a+"\\b");b="online"!==z.noRetrieval&&"all"!==z.noRetrieval&&!z.noRetrieval.match(c)}else b=!0;return b},this.getExternalAnalyses=function(b,c){function d(a){return arethusaUtil.inject({},z.postagSchema,function(b,c){var d=a[c];if(d){var e=z.attributeValues(c),f=arethusaUtil.findObj(e,function(a){return a["short"]===d||a["long"]===d});b[c]=f?f["short"]:d}})}function e(a){if(x&&a.lexInvLocation){var b=a.lexInvLocation.urn;x.getData(b,a)}}function g(a){return aU.unique(a,function(a,b){return a.lemma===b.lemma&&a.postag===b.postag})}function h(b,c){b&&!z.hasSelection(z.analyses[c])&&a.doSilent(function(){z.setState(c,b)})}function i(a,b){return f.sortByPreference(a,b)}var j={};angular.forEach(w,function(a,f){z.canRetrieveFrom(f)&&(j[f]={},a.getData(b.string,function(a){j[f][b.string]=!0,a.forEach(function(a){a.attributes=d(a.attributes),a.postag=z.attributesToPostag(a.attributes),e(a)});var k=b.string,l=b.forms;l.length>0&&z.mergeDuplicateForms(l[0],a);var m=g(a);arethusaUtil.pushAll(l,m);var n=!0;angular.forEach(j,function(a,c){a[b.string]||(n=!1)}),n&&(z.storePreferences&&i(k,l),z.preselect&&h(l[0],c),p(l,c))}))})},this.mergeDuplicateForms=function(a,b){if(a){for(var c,d=b.length-1;d>=0;d--){var e=b[d];if(l(a,e)){c=e;break}}if(c){var f=a.selected,g=a.origin;angular.extend(a,c),a.origin=g,a.selected=f,b.splice(b.indexOf(c),1)}}},this.hasSelection=function(a){for(var b,c=a.forms.length-1;c>=0;c--)if(a.forms[c].selected){b=!0;break}return b},z.preselectToggled=function(){function a(){function a(a,b){a.forms.length>0&&(z.hasSelection(a)||z.setState(b,a.forms[0]))}angular.forEach(z.analyses,a)}z.preselect&&a()},this.settings=[g.setting("Expand Selected","expandSelection"),g.setting("Store Preferences","storePreferences"),g.setting("Preselect","preselect",this.preselectToggled),g.setting("Local Storage","localStorage")],z.resetCustomForm=function(b,c){var d=a.asString(c);b.customForm=z.emptyForm(d)},this.currentAnalyses=function(){var b=z.analyses;return arethusaUtil.inject({},a.selectedTokens,function(a,c,d){var e=b[c];e&&(a[c]=e)})},this.selectAttribute=function(a){return z.attributes[a]||{}},this.longAttributeName=function(a){return z.selectAttribute(a)["long"]},this.attributeValues=function(a){return z.selectAttribute(a).values||{}},this.attributeValueObj=function(a,b){return z.attributeValues(a)[b]||{}},this.longAttributeValue=function(a,b){return z.attributeValueObj(a,b)["long"]},this.abbrevAttributeValue=function(a,b){return z.attributeValueObj(a,b)["short"]},this.postagValue=function(a,b){return z.attributeValueObj(a,b).postag},this.concatenatedAttributes=function(a){var b=[];return angular.forEach(a.attributes,function(a,c){"---"!==z.abbrevAttributeValue(c,a)&&b.push(z.abbrevAttributeValue(c,a))}),b.join(".")},this.sortAttributes=function(a){return arethusaUtil.inject([],z.postagSchema,function(b,c){var d=a[c];d&&b.push({attr:c,val:d})})},this.rulesOf=function(a){return z.selectAttribute(a).rules};var B;this.colorMap=function(){function a(){var a=["long","postag"],b=[],c={header:a,maps:b};return angular.forEach(z.attributes,function(c,d){var e={},f={label:c["long"],colors:e};aU.inject(e,c.values,function(b,c,d){var e=aU.flatten(aU.map(a,d)).join(" || ");b[e]=d.style}),b.push(f)}),c}return B||(B=a()),B},this.applyStyling=function(){angular.forEach(a.tokens,function(b,c){var d=b.morphology;d?a.addStyle(c,z.styleOf(d)):a.unsetStyle(c)})},this.styleOf=function(a){var b={};return angular.forEach(a.attributes,function(a,c){var d=z.attributeValueObj(c,a).style;angular.extend(b,d)}),b},this.removeForm=function(b,c){var d=z.analyses[b].forms,e=d.indexOf(c);z.removeFromLocalStorage(a.asString(b),c),d.splice(e,1)},this.addToLocalStorage=function(a,b){z.localStorage&&f.addForm(a,b)},this.removeFromLocalStorage=function(a,b){z.localStorage&&f.removeForm(a,b)},this.updateGloss=function(b,c){if(z.gloss){a.broadcast("tokenChange");var d=z.analyses[b].gloss||"";c=c||o(b),c.gloss=d}},this.setState=function(b,c){function d(a){var b=o(a);return b?function(){z.setState(a,b)}:function(){z.unsetState(a)}}function e(b,c){return function(){s(b),r(c,b),n(b),c.selected=!0,q()&&a.addStyle(b,z.styleOf(c))}}z.updateGloss(b,c),a.change(b,"morphology",c,d(b),e(b,c))},this.unsetState=function(b){function c(a){var b=o(a);return function(){z.setState(a,b)}}function d(b){return function(){s(b),n(b),o(b).selected=!1,q()&&a.unsetStyle(b)}}a.change(b,"morphology",null,c(b),d(b))},this.queryForm=function(){function b(a){return arethusaUtil.inject({},a,function(a,b){var c=y[b]||[];angular.forEach(c,function(b,c){a[b]=!0})})}function c(a){var b=a.shift(),c=y[b]||[];return angular.forEach(a,function(a,b){var d=y[a]||[];c=arethusaUtil.intersect(c,d)}),arethusaUtil.inject({},c,function(a,b){a[b]=!0})}var d=z.formQuery.split(" "),e=z.matchAll?c(d):b(d);a.multiSelect(Object.keys(e))},this.activeKeys={};var C=e.initCaptures(function(b){function d(b){if(c.isSelected(z)){var d=a.hasClickSelections();1===d&&b()}}function e(b){var c,d=Object.keys(a.clickedTokens)[0],e=z.analyses[d].forms,f=e.indexOf(o(d));c=b?f===e.length-1?0:f+1:0===f?e.length-1:f-1,z.setState(d,e[c])}function f(){d(function(){e(!0)})}function g(){d(function(){e()})}return{morph:[b.create("selectNextForm",function(){b.doRepeated(f)},"↓"),b.create("selectPrevForm",function(){b.doRepeated(g)},"↑")]}});angular.extend(z.activeKeys,C.selections);var D;h.onSuccess(t),i.onMove(u),j.onLeave(u),a.on("tokenAdded",function(a,b){var c=b.id,d=new k(b.string);z.analyses[c]=d,b.morphology={},m(d,c)}),a.on("tokenRemoved",function(a,b){var c=b.id;s(c),delete z.analyses[c]}),this.init=function(){function b(){function a(a){var b=a.abort;angular.isFunction(b)&&b()}w&&angular.forEach(w,a)}function d(){return arethusaUtil.map(z.postagSchema,function(a){return"-"}).join("")}function e(){return arethusaUtil.inject({},a.tokens,function(a,b,c){a[b]=new k(c.string)})}function f(){z.canRetrieveFrom("document")&&angular.forEach(z.analyses,m)}function g(){angular.forEach(a.tokens,function(a,b){var c=a.morphology||{};r(c,b)})}b(),v(),z.emptyPostag=d(),z.analyses=e(),f(),g(),c.declareReady(z)}}]),angular.module("arethusa.morph").service("morphLocalStorage",["plugins","arethusaLocalStorage","_",function(a,b,c){function d(a){return G.localStorageKey+"."+a}function e(a){return G.preferenceKey+"."+a}function f(a,b){var c=g(a);b(c)}function g(a){return b.get(d(a))||[]}function h(a){return b.get(e(a))||""}function i(a,c){b.set(d(a),c)}function j(a,c){var d=B+C+c;return b.set(e(a),d)}function k(a,b){var c=g(a)||[];if(y(b)){var d=angular.copy(b);return d.selected=!1,c.push(d),i(a,c),1}return 0}function l(a,b){var d=g(a)||[],e=0,f=c.map(d,s);return c.forEach(b,function(a){y(a)&&!c.contains(f,s(a))&&(d.push(a),e++)}),i(a,d),e}function m(a,b){var c=g(a);if(c){var d=aU.find(c,function(a){return G.comparator(b,a)});d&&c.splice(c.indexOf(d),1),i(a,c)}}function n(a,b,d){if(d=parseInt(d)||1,y(b)){var e=s(b),f=q(a),g=f[e],h=g?g+d:d;f[e]=h;var i=p(f),k=c.map(i,function(a){return a[0]+E+a[1]}).join(D);return j(a,k),1}return 0}function o(a,b){var d=x(b);return c.forEach(d,function(b){n(a,b.form,b.count)}),d.length}function p(a){return c.map(a,function(a,b){return[b,a]}).sort(function(a,b){return a[1]<b[1]})}function q(a){var b=x(h(a));return c.inject(c.filter(b),function(a,b){return a[s(b.form)]=parseInt(b.count),a},{})}function r(a,b){var d=q(a),e=c.inject(b,function(a,b){return a[s(b)]=b,a},{});return c.forEachRight(p(d),function(a){var c=e[a[0]];if(c){b.splice(b.indexOf(c),1);b.unshift(c)}}),b}function s(a){return a.lemma+F+a.postag}function t(){return v(G.localStorageKey)}function u(){return v(G.preferenceKey)}function v(a){return c.inject(b.keys(),function(c,d){var e=d.match("^"+a+".(.*)");return e&&(c[e[1]]=b.get(d)),c},{})}function w(a){return a>=A&&z>=a}function x(a){var b,c,d=[],e=a.split(C);if(2==e.length&&(c=e[0],b=e[1].split(D)),w(c))for(var f=0;f<b.length;f++){var g=b[f].split(E);if(2==g.length){var h=parseInt(g[1]),i=g[0].split(F);if(2==i.length){var j=i[0],k=i[1];d.push({form:{lemma:j,postag:k},count:h})}}}return d}function y(a){return a.lemma&&a.postag&&"string"==typeof a.lemma&&"string"==typeof a.postag}var z="1",A="1",B="1",C="$$",D=";;",E="@@",F="|-|",G=this;this.localStorageKey="morph.forms",this.preferenceKey="morph.prefs",this.delimiters={preference:D,count:E,lemmaToPostag:F,version:C},this.retriever={getData:f,abort:function(){}},this.addForm=k,this.addForms=l,this.removeForm=m,this.addPreference=n,this.addPreferences=o,this.sortByPreference=r,this.getForms=t,this.getPreferences=u,this.readPreference=x}]),angular.module("arethusa.morph").run(["$templateCache",function(a){a.put("js/arethusa.morph/templates/context_menu.html","<div>{{ plugin.concatenatedAttributes(token.morphology) }}</div>\n"),a.put("js/arethusa.morph/templates/morph_form_attributes.html",'<div class="small-12 columns note">\n  <alert\n    class="error radius center fade-in"\n    ng-if="confirmationRequested">\n    Do you really want to remove this form?\n    <div class="small-1 columns">\n      <i ng-click="removeForm()" class="clickable fi-check"></i>\n    </div>\n    <div class="small-1 columns">\n      <i ng-click="skipRemoval()" class="clickable fi-x"></i>\n    </div>\n  </alert>\n\n  <div class="right">\n    <a\n      mirror-morph-form="form"\n      reveal-toggle="mfc{{ tokenId }}"\n      always-reveal="true"\n      token-id="tokenId">\n      Create new\n    </a>\n    <span>&nbsp;-&nbsp;</span>\n    <a\n      ng-click="askForRemoval()">\n      Remove Form\n    </a>\n  </div>\n</div>\n<div class="small-12 columns text" ng-repeat="o in attrs">\n  <span class="small-5 columns note">\n    <span class="right">{{ m.longAttributeName(o.attr) }}</span>\n  </span>\n  <span class="small-7 columns"> {{ m.longAttributeValue(o.attr, o.val) }}</span>\n</div>\n\n\n<div ng-if="inv" class="small-12 columns">\n  <hr>\n  <div>\n    <p>\n      <span class="small-8 columns"><em>Lexical Inventory</em></span>\n      <span class="small-4 columns note">\n        <a href="{{ inv.uri }}" target="_blank">{{ inv.urn }}</a>\n      </span>\n    </p>\n  </div>\n  <br>\n  <div class="small-12 columns" style="margin-top: 1em">\n    <ul class="text">\n      <li>Dictionary Entries\n        <ul class="text">\n          <li ng-repeat="(name, link) in inv.dictionaries">\n            <a href="{{ link }}" target="_blank">{{ name }}</a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</div>\n'),a.put("js/arethusa.morph/templates/search.html",'<div class="row">\n<div class="small-12 columns">\n  <label>\n    <span translate="morph.searchByForm"/>\n    <div class="row collapse">\n    <div class="small-10 columns">\n      <input type="search"\n        ng-change="plugin.queryForm()"\n        ng-model="plugin.formQuery" />\n    </div>\n    <div class="small-2 columns">\n    <label class="postfix">\n      <span translate="morph.matchAll"/>\n      <input\n        type="checkbox"\n        ng-change="plugin.queryForm()"\n        ng-model="plugin.matchAll"/>\n    </label>\n    </div>\n    </div>\n  </label>\n</div>\n</div>\n\n')}]);
//# sourceMappingURL=arethusa.morph.min.map